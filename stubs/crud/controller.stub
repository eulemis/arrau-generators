<?php

namespace App\Http\Controllers\Admin\{{pluralModel}};

use App\Http\Controllers\Controller;
use App\Models\{{Model}};
use Illuminate\Http\Request;
use App\Services\{{pluralModel}}\{{Model}}Service;
use App\Http\Requests\Admin\{{pluralModel}}\{{Model}}StoreRequest;
use App\Http\Requests\Admin\{{pluralModel}}\{{Model}}UpdateRequest;
use App\Helpers\Paginate as DataTablePaginate;

class {{Model}}Controller extends Controller
{
    protected string $title = '{{routePlural}}.index_title';
    protected string $prefix = 'admin.{{routePlural}}';

    public function __construct(private readonly {{Model}}Service $service)
    {
        $this->authorizeResource({{Model}}::class, '{{camel}}');
    }

    protected function breadcrumbs(): array
    {
        return [
            ['page' => route('dashboard'), 'title' => __('Dashboard')],
            ['page' => route('admin.{{routePlural}}.index'), 'title' => __('{{routePlural}}.index_title')],
        ];
    }

    public function index() { return view('admin.{{routePlural}}.index'); }

    public function data(Request $request) { return response()->json(DataTablePaginate::get({{Model}}::class, $request)); }

    public function create() { return view('admin.{{routePlural}}.create', ['{{camel}}' => new {{Model}}()]); }

    public function store({{Model}}StoreRequest $request) { $this->service->create($request->validated()); return redirect()->route('admin.{{routePlural}}.index')->with('success', __('{{routePlural}}.created')); }

    public function show({{Model}} ${{camel}}) { return view('admin.{{routePlural}}.show', compact('{{camel}}')); }

    public function edit({{Model}} ${{camel}}) { return view('admin.{{routePlural}}.edit', compact('{{camel}}')); }

    public function update({{Model}}UpdateRequest $request, {{Model}} ${{camel}}) { $this->service->update(${{camel}}, $request->validated()); return redirect()->route('admin.{{routePlural}}.index')->with('success', __('{{routePlural}}.updated')); }

    public function destroy({{Model}} ${{camel}}) { $this->service->delete(${{camel}}); return back()->with('success', __('{{routePlural}}.deleted')); }

    public function delete({{Model}} ${{camel}}) { return view('admin.{{routePlural}}.delete', compact('{{camel}}')); }
}
